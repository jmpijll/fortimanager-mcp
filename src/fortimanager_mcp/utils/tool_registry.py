"""Tool registry for dynamic tool loading and discovery."""

import importlib
import inspect
from dataclasses import dataclass
from typing import Any, Callable

import logging

logger = logging.getLogger(__name__)


@dataclass
class ToolMetadata:
    """Metadata for a FortiManager MCP tool."""

    name: str
    module: str
    category: str
    description: str
    parameters: dict[str, Any]
    requires_adom: bool = False


# Complete registry of all FortiManager MCP tools
# This is used in dynamic mode to discover and execute tools without loading them all
# Generated tool registry - DO NOT EDIT MANUALLY
# Run generate_tool_registry.py to update

TOOL_REGISTRY: dict[str, ToolMetadata] = {
    "abort_policy_install": ToolMetadata(
        name="abort_policy_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Abort an ongoing policy installation task.",
        parameters={'task_id': {'type': 'integer', 'required': True}},
        requires_adom=False,
    ),
    "add_custom_command_to_template": ToolMetadata(
        name="add_custom_command_to_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Add a custom command to a FortiSwitch template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'command_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "add_device_to_group": ToolMetadata(
        name="add_device_to_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Add a device to a device group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "add_interface_to_zone": ToolMetadata(
        name="add_interface_to_zone",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Add an interface to a system zone.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'zone_name': {'type': 'string', 'required': True}, 'interface': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "add_ips_rule": ToolMetadata(
        name="add_ips_rule",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Add IPS rule to a sensor.",
        parameters={'sensor_name': {'type': 'string', 'required': True}, 'severity': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'action': {'type': 'string', 'optional': True, 'default': 'default'}, 'log': {'type': 'string', 'optional': True, 'default': 'disable'}},
        requires_adom=True,
    ),
    "add_ospf_network_entry": ToolMetadata(
        name="add_ospf_network_entry",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Add OSPF network entry.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'network': {'type': 'string', 'required': True}, 'area': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "add_policies_to_block": ToolMetadata(
        name="add_policies_to_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Add policies to a policy block.",
        parameters={'block_name': {'type': 'string', 'required': True}, 'policy_ids': {'type': 'integer', 'required': True}, 'source_package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "add_real_device": ToolMetadata(
        name="add_real_device",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Add a real (physical) FortiGate device to FortiManager.",
        parameters={'name': {'type': 'string', 'required': True}, 'ip': {'type': 'string', 'required': True}, 'username': {'type': 'string', 'required': True}, 'password': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'mgmt_mode': {'type': 'string', 'optional': True, 'default': 'fmg'}},
        requires_adom=True,
    ),
    "add_template_to_group": ToolMetadata(
        name="add_template_to_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Add a CLI template to a template group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "add_url_to_filter": ToolMetadata(
        name="add_url_to_filter",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Add URL to a URL filter.",
        parameters={'filter_id': {'type': 'integer', 'required': True}, 'url': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'action': {'type': 'string', 'optional': True, 'default': 'block'}},
        requires_adom=True,
    ),
    "add_vdom": ToolMetadata(
        name="add_vdom",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Add a VDOM to a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "add_vlan_interface": ToolMetadata(
        name="add_vlan_interface",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Add a VLAN interface to a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'interface': {'type': 'string', 'required': True}, 'vlan_id': {'type': 'integer', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "analyze_policy_package_complexity": ToolMetadata(
        name="analyze_policy_package_complexity",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Analyze policy package complexity and get optimization recommendations.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_certificate_template": ToolMetadata(
        name="assign_certificate_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a certificate template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'local_cert_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_cli_template": ToolMetadata(
        name="assign_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a CLI template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_cli_template_group": ToolMetadata(
        name="assign_cli_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a CLI template group to a device.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_device_to_adom": ToolMetadata(
        name="assign_device_to_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Assign a device/VDOM to an ADOM.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_fortiswitch_template": ToolMetadata(
        name="assign_fortiswitch_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a FortiSwitch template to a switch.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'switch_id': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_ipsec_template": ToolMetadata(
        name="assign_ipsec_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign an IPsec tunnel template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_metadata_to_objects": ToolMetadata(
        name="assign_metadata_to_objects",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Assign metadata to multiple objects at once.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'object_names': {'type': 'array', 'required': True}, 'metadata_key': {'type': 'string', 'required': True}, 'metadata_value': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_prerun_cli_template": ToolMetadata(
        name="assign_prerun_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a pre-run CLI template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_sdwan_template": ToolMetadata(
        name="assign_sdwan_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign an SD-WAN template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_static_route_template": ToolMetadata(
        name="assign_static_route_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a static route template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_system_template": ToolMetadata(
        name="assign_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a system template to a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_template_group_to_device_group": ToolMetadata(
        name="assign_template_group_to_device_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Assign a template group to a device group.",
        parameters={'template_group_name': {'type': 'string', 'required': True}, 'device_group_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "assign_vdom_to_adom": ToolMetadata(
        name="assign_vdom_to_adom",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Assign a VDOM to a different ADOM.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'required': True}, 'target_adom': {'type': 'string', 'required': True}, 'source_adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "authorize_device": ToolMetadata(
        name="authorize_device",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Authorize (promote) an unauthorized device for management.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'username': {'type': 'string', 'optional': True, 'default': None}, 'password': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "authorize_fortiswitch": ToolMetadata(
        name="authorize_fortiswitch",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Authorize a FortiSwitch device.",
        parameters={'switch_id': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "backup_system_config": ToolMetadata(
        name="backup_system_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Trigger FortiManager configuration backup.",
        parameters={},
        requires_adom=False,
    ),
    "bulk_add_security_profile_entries": ToolMetadata(
        name="bulk_add_security_profile_entries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Add multiple entries to a security profile in one batch operation.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'required': True}, 'entries_json': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "bulk_delete_security_profile_entries": ToolMetadata(
        name="bulk_delete_security_profile_entries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Delete multiple entries from a security profile.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'required': True}, 'entry_ids': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "bulk_update_security_profile_entries": ToolMetadata(
        name="bulk_update_security_profile_entries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Update multiple entries in a security profile.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'required': True}, 'updates_json': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "cancel_scheduled_install": ToolMetadata(
        name="cancel_scheduled_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Cancel a scheduled policy package installation.",
        parameters={'schedule_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "change_device_serial_number": ToolMetadata(
        name="change_device_serial_number",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Change the serial number of a managed device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'new_serial_number': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "check_adom_integrity": ToolMetadata(
        name="check_adom_integrity",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Check ADOM database integrity.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "check_device_connectivity": ToolMetadata(
        name="check_device_connectivity",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Check device connectivity status.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "clone_adom": ToolMetadata(
        name="clone_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Clone an ADOM with all its configurations.",
        parameters={'source_adom': {'type': 'string', 'required': True}, 'target_adom': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "clone_cli_script": ToolMetadata(
        name="clone_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Clone an existing CLI script with a new name.",
        parameters={'source_name': {'type': 'string', 'required': True}, 'new_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "clone_firewall_policy": ToolMetadata(
        name="clone_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Clone an existing firewall policy.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'new_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "clone_fortiswitch_template": ToolMetadata(
        name="clone_fortiswitch_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Clone a FortiSwitch template.",
        parameters={'source_name': {'type': 'string', 'required': True}, 'new_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "clone_policy_block": ToolMetadata(
        name="clone_policy_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Clone an existing policy block.",
        parameters={'source_block_name': {'type': 'string', 'required': True}, 'new_block_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "clone_system_template": ToolMetadata(
        name="clone_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Clone an existing system template.",
        parameters={'source_name': {'type': 'string', 'required': True}, 'new_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "commit_adom_workspace": ToolMetadata(
        name="commit_adom_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Commit changes to an ADOM workspace.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "commit_device_workspace": ToolMetadata(
        name="commit_device_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Commit changes to a device configuration.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "commit_policy_package_workspace": ToolMetadata(
        name="commit_policy_package_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Commit changes to a policy package.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "consolidate_similar_policies": ToolMetadata(
        name="consolidate_similar_policies",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Analyze and consolidate similar policies to reduce rule count.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_address_group": ToolMetadata(
        name="create_address_group",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Create a new firewall address group.",
        parameters={'name': {'type': 'string', 'required': True}, 'members': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comment': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_adom_revision": ToolMetadata(
        name="create_adom_revision",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Create a manual ADOM revision/checkpoint.",
        parameters={'adom': {'type': 'string', 'required': True}, 'name': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': None}, 'locked': {'type': 'boolean', 'optional': True, 'default': 'False'}},
        requires_adom=True,
    ),
    "create_adom_with_device_assignment": ToolMetadata(
        name="create_adom_with_device_assignment",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Create ADOM and assign devices in one atomic operation.",
        parameters={'name': {'type': 'string', 'required': True}, 'os_version': {'type': 'string', 'required': True}, 'device_assignments': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': ''}},
        requires_adom=True,
    ),
    "create_advanced_adom": ToolMetadata(
        name="create_advanced_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Create ADOM with advanced configuration options.",
        parameters={'name': {'type': 'string', 'required': True}, 'os_version': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': ''}, 'maintenance_release': {'type': 'integer', 'optional': True, 'default': '0'}, 'enable_central_management': {'type': 'boolean', 'optional': True, 'default': 'True'}, 'enable_split_task': {'type': 'boolean', 'optional': True, 'default': 'True'}, 'restricted_products': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_central_dnat_policy": ToolMetadata(
        name="create_central_dnat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a central destination NAT policy.",
        parameters={'package': {'type': 'string', 'required': True}, 'source_interfaces': {'type': 'array', 'required': True}, 'destination_interfaces': {'type': 'array', 'required': True}, 'original_addresses': {'type': 'array', 'required': True}, 'translated_addresses': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_central_snat_policy": ToolMetadata(
        name="create_central_snat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a central source NAT policy.",
        parameters={'package': {'type': 'string', 'required': True}, 'source_interfaces': {'type': 'array', 'required': True}, 'destination_interfaces': {'type': 'array', 'required': True}, 'original_addresses': {'type': 'array', 'required': True}, 'nat_ip_pools': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_certificate_template": ToolMetadata(
        name="create_certificate_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new certificate template.",
        parameters={'name': {'type': 'string', 'required': True}, 'template_type': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'organization': {'type': 'string', 'optional': True, 'default': None}, 'country': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_cli_script": ToolMetadata(
        name="create_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Create a new CLI script.",
        parameters={'name': {'type': 'string', 'required': True}, 'content': {'type': 'string', 'required': True}, 'target': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'script_type': {'type': 'string', 'optional': True, 'default': 'cli'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_cli_template": ToolMetadata(
        name="create_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new CLI template.",
        parameters={'name': {'type': 'string', 'required': True}, 'script': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_cli_template_group": ToolMetadata(
        name="create_cli_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new CLI template group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_custom_application": ToolMetadata(
        name="create_custom_application",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Create a custom application signature.",
        parameters={'tag': {'type': 'string', 'required': True}, 'protocol': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_custom_command": ToolMetadata(
        name="create_custom_command",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a custom command for FortiSwitch.",
        parameters={'command_name': {'type': 'string', 'required': True}, 'command': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_device_blueprint": ToolMetadata(
        name="create_device_blueprint",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Create a device blueprint.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_device_group": ToolMetadata(
        name="create_device_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new device group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_dns_filter_domain": ToolMetadata(
        name="create_dns_filter_domain",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Create a DNS filter domain list.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_dynamic_interface": ToolMetadata(
        name="create_dynamic_interface",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new dynamic interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_external_threat_feed": ToolMetadata(
        name="create_external_threat_feed",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Create an external threat feed (IP/domain blocklist).",
        parameters={'name': {'type': 'string', 'required': True}, 'url': {'type': 'string', 'required': True}, 'resource_type': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_firewall_address": ToolMetadata(
        name="create_firewall_address",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Create a new firewall address object.",
        parameters={'name': {'type': 'string', 'required': True}, 'subnet': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comment': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_firewall_policy": ToolMetadata(
        name="create_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a new firewall policy rule.",
        parameters={'package': {'type': 'string', 'required': True}, 'source_interfaces': {'type': 'array', 'required': True}, 'destination_interfaces': {'type': 'array', 'required': True}, 'source_addresses': {'type': 'array', 'required': True}, 'destination_addresses': {'type': 'array', 'required': True}, 'services': {'type': 'array', 'required': True}, 'action': {'type': 'string', 'optional': True, 'default': 'accept'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'name': {'type': 'string', 'optional': True, 'default': None}, 'comments': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_firewall_service": ToolMetadata(
        name="create_firewall_service",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Create a new firewall service object.",
        parameters={'name': {'type': 'string', 'required': True}, 'protocol': {'type': 'string', 'required': True}, 'port_range': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comment': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_firewall_zone": ToolMetadata(
        name="create_firewall_zone",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Create a new firewall zone.",
        parameters={'zone_name': {'type': 'string', 'required': True}, 'interfaces': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_fortianalyzer_adom": ToolMetadata(
        name="create_fortianalyzer_adom",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Create ADOM in connected FortiAnalyzer for log collection.",
        parameters={'adom_name': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': ''}},
        requires_adom=True,
    ),
    "create_fortiswitch_template": ToolMetadata(
        name="create_fortiswitch_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a FortiSwitch template.",
        parameters={'name': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': ''}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_ha_cluster": ToolMetadata(
        name="create_ha_cluster",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Create a Model HA Cluster.",
        parameters={'name': {'type': 'string', 'required': True}, 'platform': {'type': 'string', 'required': True}, 'primary_sn': {'type': 'string', 'required': True}, 'secondary_sn': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'os_ver': {'type': 'string', 'optional': True, 'default': '7.0'}},
        requires_adom=True,
    ),
    "create_internet_service_fqdn": ToolMetadata(
        name="create_internet_service_fqdn",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Create Internet Service FQDN definition.",
        parameters={'name': {'type': 'string', 'required': True}, 'internet_service_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_internet_service_group": ToolMetadata(
        name="create_internet_service_group",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Create an internet service group.",
        parameters={'name': {'type': 'string', 'required': True}, 'members': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_ip_pool": ToolMetadata(
        name="create_ip_pool",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Create an IP pool for source NAT.",
        parameters={'name': {'type': 'string', 'required': True}, 'startip': {'type': 'string', 'required': True}, 'endip': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_ips_sensor": ToolMetadata(
        name="create_ips_sensor",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Create a new IPS sensor.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comment': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_ipsec_phase1_interface": ToolMetadata(
        name="create_ipsec_phase1_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Create a new IPsec Phase1 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'interface': {'type': 'string', 'required': True}, 'remote_gw': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'psk': {'type': 'string', 'optional': True, 'default': None}, 'certificate': {'type': 'string', 'optional': True, 'default': None}, 'ike_version': {'type': 'integer', 'optional': True, 'default': '2'}, 'proposal': {'type': 'string', 'optional': True, 'default': 'aes128-sha256'}},
        requires_adom=True,
    ),
    "create_ipsec_phase2_interface": ToolMetadata(
        name="create_ipsec_phase2_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Create a new IPsec Phase2 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'phase1name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'src_subnet': {'type': 'string', 'optional': True, 'default': None}, 'dst_subnet': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_ipsec_template": ToolMetadata(
        name="create_ipsec_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new IPsec tunnel template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_model_device": ToolMetadata(
        name="create_model_device",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Create a model (virtual) FortiGate device.",
        parameters={'name': {'type': 'string', 'required': True}, 'platform': {'type': 'string', 'required': True}, 'serial_number': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'os_ver': {'type': 'string', 'optional': True, 'default': '7.0'}},
        requires_adom=True,
    ),
    "create_model_fortiap": ToolMetadata(
        name="create_model_fortiap",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a model FortiAP device for centralized wireless management.",
        parameters={'name': {'type': 'string', 'required': True}, 'wtp_id': {'type': 'string', 'required': True}, 'platform': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'wtp_profile': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_model_fortiextender": ToolMetadata(
        name="create_model_fortiextender",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a model FortiExtender device for cellular connectivity management.",
        parameters={'name': {'type': 'string', 'required': True}, 'extender_id': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'optional': True, 'default': None}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_model_fortiswitch": ToolMetadata(
        name="create_model_fortiswitch",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a model FortiSwitch device for centralized switch management.",
        parameters={'switch_id': {'type': 'string', 'required': True}, 'platform': {'type': 'string', 'required': True}, 'serial_number': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'template_name': {'type': 'string', 'optional': True, 'default': None}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_policy_block": ToolMetadata(
        name="create_policy_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a new policy block.",
        parameters={'block_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_policy_folder": ToolMetadata(
        name="create_policy_folder",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a folder to organize policy packages.",
        parameters={'folder_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'parent_folder': {'type': 'string', 'optional': True, 'default': ''}},
        requires_adom=True,
    ),
    "create_policy_section": ToolMetadata(
        name="create_policy_section",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Create a named section for organizing policies.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'section_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_recurring_schedule": ToolMetadata(
        name="create_recurring_schedule",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Create a recurring schedule for time-based policies.",
        parameters={'name': {'type': 'string', 'required': True}, 'days': {'type': 'array', 'required': True}, 'start_time': {'type': 'string', 'required': True}, 'end_time': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_sdwan_health_check": ToolMetadata(
        name="create_sdwan_health_check",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Create an SD-WAN health check monitor.",
        parameters={'name': {'type': 'string', 'required': True}, 'server': {'type': 'string', 'required': True}, 'protocol': {'type': 'string', 'optional': True, 'default': 'ping'}, 'interval': {'type': 'integer', 'optional': True, 'default': '1000'}, 'probe_timeout': {'type': 'integer', 'optional': True, 'default': '500'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_sdwan_service": ToolMetadata(
        name="create_sdwan_service",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Create an SD-WAN service rule.",
        parameters={'name': {'type': 'string', 'required': True}, 'mode': {'type': 'string', 'optional': True, 'default': 'manual'}, 'dst': {'type': 'array', 'optional': True, 'default': None}, 'src': {'type': 'array', 'optional': True, 'default': None}, 'priority_members': {'type': 'array', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_sdwan_template": ToolMetadata(
        name="create_sdwan_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new SD-WAN template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_sdwan_zone": ToolMetadata(
        name="create_sdwan_zone",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Create an SD-WAN zone.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'service_sla_tie_break': {'type': 'string', 'optional': True, 'default': 'zone'}},
        requires_adom=True,
    ),
    "create_security_profile_group": ToolMetadata(
        name="create_security_profile_group",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Create a security profile group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_sslvpn_portal": ToolMetadata(
        name="create_sslvpn_portal",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Create a new SSL-VPN portal.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'tunnel_mode': {'type': 'boolean', 'optional': True, 'default': 'True'}, 'web_mode': {'type': 'boolean', 'optional': True, 'default': 'True'}},
        requires_adom=True,
    ),
    "create_static_route_template": ToolMetadata(
        name="create_static_route_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new static route template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_system_template": ToolMetadata(
        name="create_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a new system template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "create_template_group": ToolMetadata(
        name="create_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Create a template group bundling multiple templates.",
        parameters={'name': {'type': 'string', 'required': True}, 'description': {'type': 'string', 'optional': True, 'default': ''}, 'cli_template_groups': {'type': 'array', 'optional': True, 'default': None}, 'fortiap_profiles': {'type': 'array', 'optional': True, 'default': None}, 'fortiswitch_templates': {'type': 'array', 'optional': True, 'default': None}, 'fortiextender_profiles': {'type': 'array', 'optional': True, 'default': None}, 'system_templates': {'type': 'array', 'optional': True, 'default': None}, 'ipsec_templates': {'type': 'array', 'optional': True, 'default': None}, 'static_route_templates': {'type': 'array', 'optional': True, 'default': None}, 'sdwan_templates': {'type': 'array', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_traffic_class": ToolMetadata(
        name="create_traffic_class",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Create a traffic class.",
        parameters={'class_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_vip_group": ToolMetadata(
        name="create_vip_group",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Create a VIP group.",
        parameters={'name': {'type': 'string', 'required': True}, 'members': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_virtual_ip": ToolMetadata(
        name="create_virtual_ip",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Create a virtual IP for destination NAT or port forwarding.",
        parameters={'name': {'type': 'string', 'required': True}, 'extip': {'type': 'string', 'required': True}, 'mappedip': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "create_wildcard_fqdn": ToolMetadata(
        name="create_wildcard_fqdn",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Create a wildcard FQDN for pattern-based domain matching.",
        parameters={'name': {'type': 'string', 'required': True}, 'pattern': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_adom_revision": ToolMetadata(
        name="delete_adom_revision",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Delete an ADOM revision.",
        parameters={'adom': {'type': 'string', 'required': True}, 'revision_id': {'type': 'integer', 'required': True}},
        requires_adom=True,
    ),
    "delete_central_dnat_policy": ToolMetadata(
        name="delete_central_dnat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Delete a central DNAT policy.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_central_snat_policy": ToolMetadata(
        name="delete_central_snat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Delete a central SNAT policy.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_certificate_template": ToolMetadata(
        name="delete_certificate_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a certificate template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_cli_script": ToolMetadata(
        name="delete_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Delete a CLI script.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_cli_template": ToolMetadata(
        name="delete_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a CLI template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_cli_template_group": ToolMetadata(
        name="delete_cli_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a CLI template group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_custom_application": ToolMetadata(
        name="delete_custom_application",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Delete a custom application.",
        parameters={'tag': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_device_blueprint": ToolMetadata(
        name="delete_device_blueprint",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Delete a device blueprint.",
        parameters={'blueprint_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_device_group": ToolMetadata(
        name="delete_device_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a device group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_dns_filter_domain": ToolMetadata(
        name="delete_dns_filter_domain",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Delete a DNS filter domain list.",
        parameters={'filter_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_dynamic_interface": ToolMetadata(
        name="delete_dynamic_interface",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a dynamic interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_external_threat_feed": ToolMetadata(
        name="delete_external_threat_feed",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Delete an external threat feed.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_firewall_address": ToolMetadata(
        name="delete_firewall_address",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Delete a firewall address object.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_firewall_policy": ToolMetadata(
        name="delete_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Delete a firewall policy rule.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_firewall_zone": ToolMetadata(
        name="delete_firewall_zone",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Delete a firewall zone.",
        parameters={'zone_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_fortiap_profile": ToolMetadata(
        name="delete_fortiap_profile",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a FortiAP profile.",
        parameters={'profile_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_fortiextender": ToolMetadata(
        name="delete_fortiextender",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a FortiExtender device.",
        parameters={'name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_internet_service_fqdn": ToolMetadata(
        name="delete_internet_service_fqdn",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Delete Internet Service FQDN definition.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_internet_service_group": ToolMetadata(
        name="delete_internet_service_group",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Delete an internet service group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_ip_pool": ToolMetadata(
        name="delete_ip_pool",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Delete an IP pool.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_ips_sensor": ToolMetadata(
        name="delete_ips_sensor",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Delete an IPS sensor.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_ipsec_phase1_interface": ToolMetadata(
        name="delete_ipsec_phase1_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Delete an IPsec Phase1 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_ipsec_phase2_interface": ToolMetadata(
        name="delete_ipsec_phase2_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Delete an IPsec Phase2 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_ipsec_template": ToolMetadata(
        name="delete_ipsec_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete an IPsec tunnel template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_object_metadata": ToolMetadata(
        name="delete_object_metadata",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Delete specific metadata from a firewall object.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'object_name': {'type': 'string', 'required': True}, 'metadata_key': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_policy_block": ToolMetadata(
        name="delete_policy_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Delete a policy block.",
        parameters={'block_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_policy_folder": ToolMetadata(
        name="delete_policy_folder",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Delete an empty policy package folder.",
        parameters={'folder_path': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_recurring_schedule": ToolMetadata(
        name="delete_recurring_schedule",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Delete a recurring schedule.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_sdwan_health_check": ToolMetadata(
        name="delete_sdwan_health_check",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Delete an SD-WAN health check.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_sdwan_service": ToolMetadata(
        name="delete_sdwan_service",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Delete an SD-WAN service rule.",
        parameters={'service_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_sdwan_template": ToolMetadata(
        name="delete_sdwan_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete an SD-WAN template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_sdwan_zone": ToolMetadata(
        name="delete_sdwan_zone",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Delete an SD-WAN zone.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_security_profile_group": ToolMetadata(
        name="delete_security_profile_group",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Delete a security profile group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_sslvpn_portal": ToolMetadata(
        name="delete_sslvpn_portal",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Delete an SSL-VPN portal.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_static_route_template": ToolMetadata(
        name="delete_static_route_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a static route template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_system_template": ToolMetadata(
        name="delete_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a system template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_template_group": ToolMetadata(
        name="delete_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Delete a template group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_traffic_class": ToolMetadata(
        name="delete_traffic_class",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Delete a traffic class.",
        parameters={'class_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_vdom": ToolMetadata(
        name="delete_vdom",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Delete a VDOM from a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "delete_vip_group": ToolMetadata(
        name="delete_vip_group",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Delete a VIP group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_virtual_ip": ToolMetadata(
        name="delete_virtual_ip",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Delete a virtual IP.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "delete_wildcard_fqdn": ToolMetadata(
        name="delete_wildcard_fqdn",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Delete a wildcard FQDN.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "disable_device_auto_link": ToolMetadata(
        name="disable_device_auto_link",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Disable auto-link flag on a model device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "download_firmware": ToolMetadata(
        name="download_firmware",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Download a firmware image to FortiManager.",
        parameters={'product': {'type': 'string', 'required': True}, 'version': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "duplicate_firewall_policy": ToolMetadata(
        name="duplicate_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Duplicate an existing firewall policy with a new name.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'policy_id': {'type': 'integer', 'required': True}, 'new_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "enable_device_auto_link": ToolMetadata(
        name="enable_device_auto_link",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Enable auto-link flag on a model device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "enable_vdom": ToolMetadata(
        name="enable_vdom",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Enable VDOM mode on a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "enroll_certificate": ToolMetadata(
        name="enroll_certificate",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Enroll a certificate for a device using a certificate template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "execute_cli_script": ToolMetadata(
        name="execute_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Execute a CLI script.",
        parameters={'script': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'package': {'type': 'string', 'optional': True, 'default': None}, 'device': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "export_adom_config": ToolMetadata(
        name="export_adom_config",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Export ADOM configuration for backup purposes.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "export_fortiguard_configuration": ToolMetadata(
        name="export_fortiguard_configuration",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Export FortiGuard objects for backup or migration.",
        parameters={'object_types': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'export_format': {'type': 'string', 'optional': True, 'default': 'json'}},
        requires_adom=True,
    ),
    "export_policy_configuration": ToolMetadata(
        name="export_policy_configuration",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Export policy configuration to FortiGate CLI format.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "export_templates": ToolMetadata(
        name="export_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Export provisioning templates.",
        parameters={'template_names': {'type': 'array', 'required': True}, 'template_type': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "failover_cluster": ToolMetadata(
        name="failover_cluster",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Trigger a failover for an HA cluster.",
        parameters={'cluster_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "find_policy_by_name": ToolMetadata(
        name="find_policy_by_name",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Find firewall policy by name instead of ID.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'policy_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_active_user_sessions": ToolMetadata(
        name="get_active_user_sessions",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get current active user sessions on FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "get_address_where_used": ToolMetadata(
        name="get_address_where_used",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get where a firewall address is used.",
        parameters={'address_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_admin_config": ToolMetadata(
        name="get_admin_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get administrative settings including session timeout and lockout policy.",
        parameters={},
        requires_adom=False,
    ),
    "get_admin_user": ToolMetadata(
        name="get_admin_user",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get detailed information about a specific administrator user.",
        parameters={'username': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_administrator_activity": ToolMetadata(
        name="get_administrator_activity",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get administrator activity log for audit purposes.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}},
        requires_adom=False,
    ),
    "get_adom_checksum": ToolMetadata(
        name="get_adom_checksum",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM configuration checksum.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_adom_device_summary": ToolMetadata(
        name="get_adom_device_summary",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get summary statistics of all devices in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_disk_usage": ToolMetadata(
        name="get_adom_disk_usage",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get disk usage statistics for ADOM data storage.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_display_settings": ToolMetadata(
        name="get_adom_display_settings",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM display and selection preferences from FortiManager.",
        parameters={},
        requires_adom=True,
    ),
    "get_adom_health": ToolMetadata(
        name="get_adom_health",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get health status of ADOM including all managed devices.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_limits": ToolMetadata(
        name="get_adom_limits",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM resource limits and current usage.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_lock_status": ToolMetadata(
        name="get_adom_lock_status",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Get workspace lock status for an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_metadata_fields": ToolMetadata(
        name="get_adom_metadata_fields",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM metadata fields and values.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_adom_object_statistics": ToolMetadata(
        name="get_adom_object_statistics",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get comprehensive object count statistics for an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_object_summary": ToolMetadata(
        name="get_adom_object_summary",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get summary statistics of all objects in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_object_usage": ToolMetadata(
        name="get_adom_object_usage",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM object usage statistics.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_adom_policy_statistics": ToolMetadata(
        name="get_adom_policy_statistics",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get comprehensive policy count statistics for an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_policy_summary": ToolMetadata(
        name="get_adom_policy_summary",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get summary statistics of all policies in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_policy_sync_status": ToolMetadata(
        name="get_adom_policy_sync_status",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM policy synchronization status.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_adom_revision": ToolMetadata(
        name="get_adom_revision",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get detailed information about a specific configuration revision.",
        parameters={'revision_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_revision_list": ToolMetadata(
        name="get_adom_revision_list",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get ADOM revision history.",
        parameters={'adom': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_adom_statistics": ToolMetadata(
        name="get_adom_statistics",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get comprehensive statistics for an ADOM including devices, policies, and objects count.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_adom_where_used": ToolMetadata(
        name="get_adom_where_used",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Get where an object is used within an ADOM.",
        parameters={'adom': {'type': 'string', 'required': True}, 'object_type': {'type': 'string', 'required': True}, 'object_name': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "get_alert_console_config": ToolMetadata(
        name="get_alert_console_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get alert console configuration for system notifications.",
        parameters={},
        requires_adom=False,
    ),
    "get_alert_history": ToolMetadata(
        name="get_alert_history",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get system alert history.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}},
        requires_adom=False,
    ),
    "get_antivirus_profile": ToolMetadata(
        name="get_antivirus_profile",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Get antivirus profile details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_api_user_info": ToolMetadata(
        name="get_api_user_info",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get current API user information.",
        parameters={},
        requires_adom=False,
    ),
    "get_auto_update_configuration": ToolMetadata(
        name="get_auto_update_configuration",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get automatic update status and schedule.",
        parameters={},
        requires_adom=False,
    ),
    "get_available_package_versions": ToolMetadata(
        name="get_available_package_versions",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get available firmware and update packages for managed devices.",
        parameters={'platform': {'type': 'string', 'optional': True, 'default': 'FortiGate'}, 'current_version': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "get_available_timezones": ToolMetadata(
        name="get_available_timezones",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get list of available timezones for device configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_backup_settings": ToolMetadata(
        name="get_backup_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get backup configuration settings.",
        parameters={},
        requires_adom=False,
    ),
    "get_backup_status": ToolMetadata(
        name="get_backup_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get backup status and history.",
        parameters={},
        requires_adom=False,
    ),
    "get_bandwidth_statistics": ToolMetadata(
        name="get_bandwidth_statistics",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get bandwidth usage statistics for a specific device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_central_dnat_policy": ToolMetadata(
        name="get_central_dnat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get central DNAT policy details.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_central_snat_policy": ToolMetadata(
        name="get_central_snat_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get central SNAT policy details.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_certificate_details": ToolMetadata(
        name="get_certificate_details",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get detailed information about a specific certificate.",
        parameters={'name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_certificate_template": ToolMetadata(
        name="get_certificate_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific certificate template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_script": ToolMetadata(
        name="get_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Get CLI script details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_script_history": ToolMetadata(
        name="get_cli_script_history",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Get execution history for a specific CLI script.",
        parameters={'script_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_script_log": ToolMetadata(
        name="get_cli_script_log",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Get CLI script execution log.",
        parameters={'log_id': {'type': 'integer', 'required': True}},
        requires_adom=False,
    ),
    "get_cli_template": ToolMetadata(
        name="get_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific CLI template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_template_assigned_devices": ToolMetadata(
        name="get_cli_template_assigned_devices",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of devices assigned to a CLI template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_template_group": ToolMetadata(
        name="get_cli_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific CLI template group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cli_template_group_assigned_devices": ToolMetadata(
        name="get_cli_template_group_assigned_devices",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of devices assigned to a CLI template group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cluster_members": ToolMetadata(
        name="get_cluster_members",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get HA cluster member information.",
        parameters={'cluster_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_cluster_status": ToolMetadata(
        name="get_cluster_status",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get HA cluster members status.",
        parameters={'cluster_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_configuration_changes": ToolMetadata(
        name="get_configuration_changes",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get recent configuration changes for audit trail.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_current_api_user": ToolMetadata(
        name="get_current_api_user",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get details about the currently connected API user.",
        parameters={},
        requires_adom=False,
    ),
    "get_current_device_config": ToolMetadata(
        name="get_current_device_config",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get current device database configuration.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_custom_application": ToolMetadata(
        name="get_custom_application",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Get details of a custom application.",
        parameters={'tag': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_database_size": ToolMetadata(
        name="get_database_size",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get database size statistics.",
        parameters={},
        requires_adom=False,
    ),
    "get_default_port_config_all": ToolMetadata(
        name="get_default_port_config_all",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get default port configuration for all FortiSwitch models.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_default_port_config_model": ToolMetadata(
        name="get_default_port_config_model",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get default port configuration for a specific FortiSwitch model.",
        parameters={'platform': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_certificate_details": ToolMetadata(
        name="get_device_certificate_details",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get certificate details from a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'cert_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "get_device_connectivity_status": ToolMetadata(
        name="get_device_connectivity_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get connectivity status for all managed devices in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_details": ToolMetadata(
        name="get_device_details",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get detailed information about a specific device.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "get_device_fortiguard_contracts": ToolMetadata(
        name="get_device_fortiguard_contracts",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard service contracts for managed devices.",
        parameters={'device': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_group": ToolMetadata(
        name="get_device_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific device group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_group_members": ToolMetadata(
        name="get_device_group_members",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get members of a device group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_ha_configuration": ToolMetadata(
        name="get_device_ha_configuration",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get device HA (High Availability) status and configuration.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_install_history": ToolMetadata(
        name="get_device_install_history",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get installation history for a specific device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'limit': {'type': 'integer', 'optional': True, 'default': '50'}},
        requires_adom=True,
    ),
    "get_device_interface_configuration": ToolMetadata(
        name="get_device_interface_configuration",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get list of device network interfaces.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_meta_fields": ToolMetadata(
        name="get_device_meta_fields",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get device meta fields.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_oid": ToolMetadata(
        name="get_device_oid",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get the OID (Object ID) of a managed device.",
        parameters={'device_name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_device_profile": ToolMetadata(
        name="get_device_profile",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific device profile.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_revision": ToolMetadata(
        name="get_device_revision",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get a specific device configuration revision.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'revision_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_rma_status": ToolMetadata(
        name="get_device_rma_status",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get RMA status of a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_routing_configuration": ToolMetadata(
        name="get_device_routing_configuration",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get device routing table configuration.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_system_information": ToolMetadata(
        name="get_device_system_information",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get detailed device system status.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_vpn_monitoring": ToolMetadata(
        name="get_device_vpn_monitoring",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get device VPN tunnel monitoring information.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_device_vulnerabilities": ToolMetadata(
        name="get_device_vulnerabilities",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get Fortinet vulnerabilities for managed devices.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_disk_usage": ToolMetadata(
        name="get_disk_usage",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get disk usage information.",
        parameters={},
        requires_adom=False,
    ),
    "get_dlp_sensor": ToolMetadata(
        name="get_dlp_sensor",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Get DLP sensor details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_dns_filter_domain": ToolMetadata(
        name="get_dns_filter_domain",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Get details of a DNS filter domain list.",
        parameters={'filter_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_downloaded_fortiguard_objects": ToolMetadata(
        name="get_downloaded_fortiguard_objects",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get list of FortiGuard objects downloaded by FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "get_dynamic_interface": ToolMetadata(
        name="get_dynamic_interface",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific dynamic interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_email_server_config": ToolMetadata(
        name="get_email_server_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get email server configuration for system notifications.",
        parameters={},
        requires_adom=False,
    ),
    "get_event_log": ToolMetadata(
        name="get_event_log",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get system event log with optional severity filter (critical, warning, info).",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}, 'severity': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "get_external_threat_feed": ToolMetadata(
        name="get_external_threat_feed",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get details of a specific external threat feed.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_firewall_policy": ToolMetadata(
        name="get_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get detailed information about a specific firewall policy.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_firewall_zone": ToolMetadata(
        name="get_firewall_zone",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get firewall zone details.",
        parameters={'zone_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_firmware_upgrade_preview": ToolMetadata(
        name="get_firmware_upgrade_preview",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get firmware upgrade preview for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'firmware_version': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_firmware_upgrade_report": ToolMetadata(
        name="get_firmware_upgrade_report",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get firmware upgrade report for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_firmware_upgrade_status": ToolMetadata(
        name="get_firmware_upgrade_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get firmware upgrade status for a specific device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_fmg_gui_settings": ToolMetadata(
        name="get_fmg_gui_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get GUI display settings and configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_fmg_ha_cluster_status": ToolMetadata(
        name="get_fmg_ha_cluster_status",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager HA cluster status.",
        parameters={},
        requires_adom=False,
    ),
    "get_fmg_license": ToolMetadata(
        name="get_fmg_license",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get FortiManager license and contract information.",
        parameters={},
        requires_adom=False,
    ),
    "get_fmg_uptime": ToolMetadata(
        name="get_fmg_uptime",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get FortiManager system uptime and boot time.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiap_profile": ToolMetadata(
        name="get_fortiap_profile",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get FortiAP profile details.",
        parameters={'profile_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_fortiap_status": ToolMetadata(
        name="get_fortiap_status",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get FortiAP status for managed devices.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_forticare_registration": ToolMetadata(
        name="get_forticare_registration",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get FortiCare registration and support status.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiextender_status": ToolMetadata(
        name="get_fortiextender_status",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get FortiExtender status for managed devices.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_fortiguard_category_overrides": ToolMetadata(
        name="get_fortiguard_category_overrides",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard web filter category overrides.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_fortiguard_database_versions": ToolMetadata(
        name="get_fortiguard_database_versions",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard database versions.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_servers": ToolMetadata(
        name="get_fortiguard_servers",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard upstream server list and connection status.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_service_status": ToolMetadata(
        name="get_fortiguard_service_status",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get comprehensive FortiGuard service status.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_update_history": ToolMetadata(
        name="get_fortiguard_update_history",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard update history.",
        parameters={'category': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "get_fortiguard_update_schedule": ToolMetadata(
        name="get_fortiguard_update_schedule",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard automatic update schedule.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_update_status": ToolMetadata(
        name="get_fortiguard_update_status",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard update status.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_upstream_config": ToolMetadata(
        name="get_fortiguard_upstream_config",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Get FortiGuard upstream server configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_fortiguard_upstream_servers": ToolMetadata(
        name="get_fortiguard_upstream_servers",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get list of FortiGuard upstream servers.",
        parameters={},
        requires_adom=False,
    ),
    "get_full_device_db_syntax": ToolMetadata(
        name="get_full_device_db_syntax",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get the full device database syntax/schema.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_global_firewall_address": ToolMetadata(
        name="get_global_firewall_address",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get details of a specific global firewall address.",
        parameters={'name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_global_firewall_service": ToolMetadata(
        name="get_global_firewall_service",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get details of a specific global firewall service.",
        parameters={'name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_global_policy_hit_statistics": ToolMetadata(
        name="get_global_policy_hit_statistics",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get aggregated policy hit count statistics across all policy packages.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_global_policy_package_details": ToolMetadata(
        name="get_global_policy_package_details",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get details of a specific global policy package.",
        parameters={'package_name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_global_system_config": ToolMetadata(
        name="get_global_system_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get global FortiManager system configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_ha_cluster_status": ToolMetadata(
        name="get_ha_cluster_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get High Availability cluster status if configured.",
        parameters={},
        requires_adom=False,
    ),
    "get_ha_configuration": ToolMetadata(
        name="get_ha_configuration",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get High Availability (HA) configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_ha_status": ToolMetadata(
        name="get_ha_status",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get current High Availability (HA) status.",
        parameters={},
        requires_adom=False,
    ),
    "get_ha_sync_status": ToolMetadata(
        name="get_ha_sync_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get High Availability synchronization status.",
        parameters={},
        requires_adom=False,
    ),
    "get_install_preview": ToolMetadata(
        name="get_install_preview",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get install preview for device(s).",
        parameters={'devices': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_install_progress_detailed": ToolMetadata(
        name="get_install_progress_detailed",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get real-time detailed installation progress with line-by-line output.",
        parameters={'task_id': {'type': 'integer', 'required': True}},
        requires_adom=False,
    ),
    "get_install_targets": ToolMetadata(
        name="get_install_targets",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get list of devices available for policy installation.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ip_pool": ToolMetadata(
        name="get_ip_pool",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Get details of a specific IP pool.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ips_sensor": ToolMetadata(
        name="get_ips_sensor",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Get IPS sensor details including rules.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ipsec_phase1_interface": ToolMetadata(
        name="get_ipsec_phase1_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific IPsec Phase1 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ipsec_phase2_interface": ToolMetadata(
        name="get_ipsec_phase2_interface",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific IPsec Phase2 interface.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ipsec_template": ToolMetadata(
        name="get_ipsec_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific IPsec tunnel template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_ipsec_tunnel_status": ToolMetadata(
        name="get_ipsec_tunnel_status",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get IPsec tunnel status for a device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_license_status": ToolMetadata(
        name="get_license_status",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager license status.",
        parameters={},
        requires_adom=False,
    ),
    "get_log_config": ToolMetadata(
        name="get_log_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get log configuration and retention settings.",
        parameters={},
        requires_adom=False,
    ),
    "get_log_settings": ToolMetadata(
        name="get_log_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get logging configuration settings.",
        parameters={},
        requires_adom=False,
    ),
    "get_log_statistics": ToolMetadata(
        name="get_log_statistics",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get log storage and processing statistics for an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_lte_modem_status": ToolMetadata(
        name="get_lte_modem_status",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get LTE modem status for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_multicast_address": ToolMetadata(
        name="get_multicast_address",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get multicast address details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_network_interface_stats": ToolMetadata(
        name="get_network_interface_stats",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get network interface statistics with optional interface filter.",
        parameters={'interface': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "get_normalized_interface_mappings": ToolMetadata(
        name="get_normalized_interface_mappings",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get normalized interface mappings for multi-platform deployments.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_nth_policy": ToolMetadata(
        name="get_nth_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get firewall policy by index position.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'index': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_object_dependencies": ToolMetadata(
        name="get_object_dependencies",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get dependencies for any object type.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'object_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_object_metadata": ToolMetadata(
        name="get_object_metadata",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get metadata for a firewall object.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'object_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_package_dependencies": ToolMetadata(
        name="get_package_dependencies",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get installation dependencies for a policy package.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_package_lock_status": ToolMetadata(
        name="get_package_lock_status",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Get lock status for a policy package.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_platform_type": ToolMetadata(
        name="get_platform_type",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of supported FortiAP platform types.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_block": ToolMetadata(
        name="get_policy_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get details of a specific policy block.",
        parameters={'block_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_hit_count": ToolMetadata(
        name="get_policy_hit_count",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get hit count statistics showing which policies are actively used.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_hitcount": ToolMetadata(
        name="get_policy_hitcount",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get policy hit count statistics from a device.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_package_changes": ToolMetadata(
        name="get_policy_package_changes",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get list of changes since last installation.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_package_checksum": ToolMetadata(
        name="get_policy_package_checksum",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get policy package checksum for verification.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_package_status": ToolMetadata(
        name="get_policy_package_status",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get policy package installation and sync status.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_references_list": ToolMetadata(
        name="get_policy_references_list",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get all objects referenced by a specific policy.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'policy_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_policy_usage_stats": ToolMetadata(
        name="get_policy_usage_stats",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Get usage statistics for policies showing which rules are active.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sdwan_health_check": ToolMetadata(
        name="get_sdwan_health_check",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Get SD-WAN health check details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sdwan_service": ToolMetadata(
        name="get_sdwan_service",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Get SD-WAN service rule details.",
        parameters={'service_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sdwan_template": ToolMetadata(
        name="get_sdwan_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific SD-WAN template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sdwan_template_assigned_devices": ToolMetadata(
        name="get_sdwan_template_assigned_devices",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of devices assigned to an SD-WAN template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sdwan_zone": ToolMetadata(
        name="get_sdwan_zone",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Get SD-WAN zone details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_security_profile_entry_count": ToolMetadata(
        name="get_security_profile_entry_count",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Get count and list of entries in a security profile.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_security_profile_group": ToolMetadata(
        name="get_security_profile_group",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="Get details of a security profile group.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_service_where_used": ToolMetadata(
        name="get_service_where_used",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Get where a firewall service is used.",
        parameters={'service_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_session_statistics": ToolMetadata(
        name="get_session_statistics",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get session statistics for a specific device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_snmp_config": ToolMetadata(
        name="get_snmp_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get SNMP configuration including communities and trap destinations.",
        parameters={},
        requires_adom=False,
    ),
    "get_sql_config": ToolMetadata(
        name="get_sql_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get SQL database configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_sslvpn_host_check_software": ToolMetadata(
        name="get_sslvpn_host_check_software",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific SSL-VPN host check software configuration.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sslvpn_portal": ToolMetadata(
        name="get_sslvpn_portal",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific SSL-VPN portal.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_sslvpn_tunnel_status": ToolMetadata(
        name="get_sslvpn_tunnel_status",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get SSL-VPN tunnel status for a device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_static_route_template": ToolMetadata(
        name="get_static_route_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific static route template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_supported_model_devices": ToolMetadata(
        name="get_supported_model_devices",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get list of supported model device platforms.",
        parameters={},
        requires_adom=False,
    ),
    "get_syslog_config": ToolMetadata(
        name="get_syslog_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get syslog server configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_backup_status": ToolMetadata(
        name="get_system_backup_status",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get system backup status and history.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_dns_settings": ToolMetadata(
        name="get_system_dns_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager DNS server configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_global_settings": ToolMetadata(
        name="get_system_global_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get global system settings for FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_interface": ToolMetadata(
        name="get_system_interface",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get detailed information about a specific system interface.",
        parameters={'name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_system_interfaces": ToolMetadata(
        name="get_system_interfaces",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get network interface configuration for FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_ntp_settings": ToolMetadata(
        name="get_system_ntp_settings",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager NTP (time synchronization) settings.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_performance": ToolMetadata(
        name="get_system_performance",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get system performance metrics.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_performance_stats": ToolMetadata(
        name="get_system_performance_stats",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get detailed system performance statistics including CPU, memory, and disk.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_resource_usage": ToolMetadata(
        name="get_system_resource_usage",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get system resource usage including CPU, memory, and disk statistics.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_routes": ToolMetadata(
        name="get_system_routes",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager static route configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_status": ToolMetadata(
        name="get_system_status",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get comprehensive FortiManager system status.",
        parameters={},
        requires_adom=False,
    ),
    "get_system_template": ToolMetadata(
        name="get_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get detailed information about a specific system template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_system_template_assigned_devices": ToolMetadata(
        name="get_system_template_assigned_devices",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of devices assigned to a system template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_tacacs_plus_server_details": ToolMetadata(
        name="get_tacacs_plus_server_details",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get specific TACACS+ server configuration details.",
        parameters={'server_name': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "get_task_details": ToolMetadata(
        name="get_task_details",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get comprehensive details about a specific task.",
        parameters={'task_id': {'type': 'integer', 'required': True}},
        requires_adom=False,
    ),
    "get_task_history": ToolMetadata(
        name="get_task_history",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get task execution history with optional filtering.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}, 'filter_type': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "get_task_status": ToolMetadata(
        name="get_task_status",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get detailed status of a specific task.",
        parameters={'task_id': {'type': 'integer', 'required': True}},
        requires_adom=False,
    ),
    "get_template_interface_actions": ToolMetadata(
        name="get_template_interface_actions",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Get list of interface actions for a system template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_threat_statistics": ToolMetadata(
        name="get_threat_statistics",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Get threat detection statistics for specified time range (24h, 7d, 30d).",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'time_range': {'type': 'string', 'optional': True, 'default': '24h'}},
        requires_adom=True,
    ),
    "get_traffic_class": ToolMetadata(
        name="get_traffic_class",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Get traffic class details.",
        parameters={'class_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_unauthorized_devices": ToolMetadata(
        name="get_unauthorized_devices",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get list of unauthorized (unregistered) devices.",
        parameters={},
        requires_adom=False,
    ),
    "get_update_service_config": ToolMetadata(
        name="get_update_service_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get FortiManager update service configuration.",
        parameters={},
        requires_adom=False,
    ),
    "get_upgrade_history": ToolMetadata(
        name="get_upgrade_history",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get firmware upgrade history.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_upgrade_path": ToolMetadata(
        name="get_upgrade_path",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get the firmware upgrade path for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_vdom_meta_fields": ToolMetadata(
        name="get_vdom_meta_fields",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get VDOM meta fields.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_virtual_ip": ToolMetadata(
        name="get_virtual_ip",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="Get details of a specific virtual IP.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_vpn_ca_certificate": ToolMetadata(
        name="get_vpn_ca_certificate",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific VPN CA certificate.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_vpn_remote_certificate": ToolMetadata(
        name="get_vpn_remote_certificate",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get detailed information about a specific VPN remote certificate.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_vpn_statistics": ToolMetadata(
        name="get_vpn_statistics",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="Get VPN statistics for a device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_vpn_tunnel_status": ToolMetadata(
        name="get_vpn_tunnel_status",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Get VPN tunnel status/details for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_wan_profile": ToolMetadata(
        name="get_wan_profile",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="Get WAN profile details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_webfilter_profile": ToolMetadata(
        name="get_webfilter_profile",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Get web filter profile details.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "get_workspace_mode_configuration": ToolMetadata(
        name="get_workspace_mode_configuration",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Get workspace mode configuration settings.",
        parameters={},
        requires_adom=False,
    ),
    "import_fortiguard_configuration": ToolMetadata(
        name="import_fortiguard_configuration",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Import FortiGuard objects from exported configuration data.",
        parameters={'import_data': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'conflict_action': {'type': 'string', 'optional': True, 'default': 'merge'}},
        requires_adom=True,
    ),
    "import_fortiswitch_template": ToolMetadata(
        name="import_fortiswitch_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Import a FortiSwitch template.",
        parameters={'template_data': {'type': 'object', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "import_policy_configuration": ToolMetadata(
        name="import_policy_configuration",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Import policy configuration from file content.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'config_content': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "insert_policy_at_position": ToolMetadata(
        name="insert_policy_at_position",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Insert a firewall policy at a specific position (index).",
        parameters={'package_name': {'type': 'string', 'required': True}, 'position': {'type': 'integer', 'required': True}, 'source_interfaces': {'type': 'array', 'required': True}, 'destination_interfaces': {'type': 'array', 'required': True}, 'source_addresses': {'type': 'array', 'required': True}, 'destination_addresses': {'type': 'array', 'required': True}, 'services': {'type': 'array', 'required': True}, 'action': {'type': 'string', 'optional': True, 'default': 'accept'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'policy_name': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "insert_policy_block": ToolMetadata(
        name="insert_policy_block",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Insert a policy block into a policy package.",
        parameters={'block_name': {'type': 'string', 'required': True}, 'target_package': {'type': 'string', 'required': True}, 'reference_policy_id': {'type': 'integer', 'required': True}, 'position': {'type': 'string', 'optional': True, 'default': 'after'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "install_device_settings": ToolMetadata(
        name="install_device_settings",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Install pending device settings to a FortiGate device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comments': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "install_package_offline": ToolMetadata(
        name="install_package_offline",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Stage policy package installation for offline/disconnected devices.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'target_devices': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "install_package_to_device_db": ToolMetadata(
        name="install_package_to_device_db",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Install policy package to FortiManager device database only (no push to devices).",
        parameters={'package_name': {'type': 'string', 'required': True}, 'target_devices': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "install_policy_package": ToolMetadata(
        name="install_policy_package",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Install policy package to a device.",
        parameters={'package': {'type': 'string', 'required': True}, 'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_address_filters": ToolMetadata(
        name="list_address_filters",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List address group filters for dynamic membership.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_address_groups": ToolMetadata(
        name="list_address_groups",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List firewall address groups in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_admin_sessions": ToolMetadata(
        name="list_admin_sessions",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List active admin sessions.",
        parameters={},
        requires_adom=False,
    ),
    "list_admin_users": ToolMetadata(
        name="list_admin_users",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List all administrator users on FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "list_adom_revisions": ToolMetadata(
        name="list_adom_revisions",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List all configuration revisions for an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_adom_templates": ToolMetadata(
        name="list_adom_templates",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="List all CLI templates configured in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_adoms": ToolMetadata(
        name="list_adoms",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List all Administrative Domains (ADOMs).",
        parameters={},
        requires_adom=True,
    ),
    "list_all_tasks": ToolMetadata(
        name="list_all_tasks",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List all recent tasks with flexible limit.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '100'}},
        requires_adom=False,
    ),
    "list_antivirus_profiles": ToolMetadata(
        name="list_antivirus_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List antivirus profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_appctrl_profiles": ToolMetadata(
        name="list_appctrl_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List application control profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_application_categories": ToolMetadata(
        name="list_application_categories",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List application categories.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_applications": ToolMetadata(
        name="list_applications",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List all available applications.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_available_connector_types": ToolMetadata(
        name="list_available_connector_types",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List available connector types and capabilities.",
        parameters={},
        requires_adom=False,
    ),
    "list_available_firmware": ToolMetadata(
        name="list_available_firmware",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="List available firmware images from FortiGuard.",
        parameters={'platform': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=False,
    ),
    "list_ca_certificates": ToolMetadata(
        name="list_ca_certificates",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List CA certificates.",
        parameters={},
        requires_adom=False,
    ),
    "list_central_dnat_policies": ToolMetadata(
        name="list_central_dnat_policies",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List central destination NAT (DNAT) policies.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_central_snat_policies": ToolMetadata(
        name="list_central_snat_policies",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List central source NAT (SNAT) policies.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_certificate_templates": ToolMetadata(
        name="list_certificate_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all certificate templates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_cli_script_history": ToolMetadata(
        name="list_cli_script_history",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="List CLI script execution history.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'limit': {'type': 'integer', 'optional': True, 'default': '100'}},
        requires_adom=True,
    ),
    "list_cli_scripts": ToolMetadata(
        name="list_cli_scripts",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="List CLI scripts in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_cli_template_groups": ToolMetadata(
        name="list_cli_template_groups",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all CLI template groups in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_cli_templates": ToolMetadata(
        name="list_cli_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all CLI templates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_custom_applications": ToolMetadata(
        name="list_custom_applications",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="List custom application signatures.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_device_blueprints": ToolMetadata(
        name="list_device_blueprints",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List device blueprints.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_device_groups": ToolMetadata(
        name="list_device_groups",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all device groups in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_device_profiles": ToolMetadata(
        name="list_device_profiles",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all device profiles in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_device_revisions": ToolMetadata(
        name="list_device_revisions",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List device configuration revisions.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_device_vdoms": ToolMetadata(
        name="list_device_vdoms",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List VDOMs for a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "list_devices": ToolMetadata(
        name="list_devices",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List all managed FortiGate devices.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "list_dlp_dictionaries": ToolMetadata(
        name="list_dlp_dictionaries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List DLP dictionaries.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dlp_filepatterns": ToolMetadata(
        name="list_dlp_filepatterns",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List DLP file patterns.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dlp_fortiguard_elements": ToolMetadata(
        name="list_dlp_fortiguard_elements",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List FortiGuard DLP data elements.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dlp_sensors": ToolMetadata(
        name="list_dlp_sensors",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List DLP (Data Loss Prevention) sensors.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dns_filter_domains": ToolMetadata(
        name="list_dns_filter_domains",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="List DNS filter domain lists.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dynamic_firewall_addresses": ToolMetadata(
        name="list_dynamic_firewall_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List dynamic firewall addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_dynamic_interfaces": ToolMetadata(
        name="list_dynamic_interfaces",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all dynamic interfaces in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_email_filter_profiles": ToolMetadata(
        name="list_email_filter_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List email filter profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_external_threat_feeds": ToolMetadata(
        name="list_external_threat_feeds",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="List external resources (threat feeds, custom URL/IP lists).",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_fabric_connector_addresses": ToolMetadata(
        name="list_fabric_connector_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List Fabric connector addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_failed_tasks": ToolMetadata(
        name="list_failed_tasks",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List recently failed tasks.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '50'}},
        requires_adom=False,
    ),
    "list_file_filter_profiles": ToolMetadata(
        name="list_file_filter_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List file filter profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_addresses": ToolMetadata(
        name="list_firewall_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List firewall address objects in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'filter_name': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "list_firewall_policies": ToolMetadata(
        name="list_firewall_policies",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List firewall policies in a policy package.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_recurring_schedules": ToolMetadata(
        name="list_firewall_recurring_schedules",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List recurring firewall schedules.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_schedules": ToolMetadata(
        name="list_firewall_schedules",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List one-time firewall schedules.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_services": ToolMetadata(
        name="list_firewall_services",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List firewall service objects in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_traffic_shapers": ToolMetadata(
        name="list_firewall_traffic_shapers",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List traffic shapers.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_firewall_zones": ToolMetadata(
        name="list_firewall_zones",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List all firewall zones.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_fortiaps": ToolMetadata(
        name="list_fortiaps",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List FortiAP devices in an ADOM.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'vdom': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_fortiextenders": ToolMetadata(
        name="list_fortiextenders",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List FortiExtender devices in an ADOM.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'vdom': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_fortiswitches": ToolMetadata(
        name="list_fortiswitches",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List FortiSwitch devices in an ADOM.",
        parameters={'device_name': {'type': 'string', 'optional': True, 'default': None}, 'vdom': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_geography_addresses": ToolMetadata(
        name="list_geography_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List geography-based addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_global_address_groups": ToolMetadata(
        name="list_global_address_groups",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List global address groups shared across all ADOMs.",
        parameters={},
        requires_adom=True,
    ),
    "list_global_firewall_addresses": ToolMetadata(
        name="list_global_firewall_addresses",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List global firewall addresses shared across all ADOMs.",
        parameters={},
        requires_adom=True,
    ),
    "list_global_firewall_services": ToolMetadata(
        name="list_global_firewall_services",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List global firewall services shared across all ADOMs.",
        parameters={},
        requires_adom=True,
    ),
    "list_global_policy_packages": ToolMetadata(
        name="list_global_policy_packages",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List global policy packages that apply across all ADOMs.",
        parameters={},
        requires_adom=True,
    ),
    "list_icap_profiles": ToolMetadata(
        name="list_icap_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List ICAP (Internet Content Adaptation Protocol) profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_interface_addresses": ToolMetadata(
        name="list_interface_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List interface-based addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_internet_service_definitions": ToolMetadata(
        name="list_internet_service_definitions",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List custom internet service definitions.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_internet_service_fqdns": ToolMetadata(
        name="list_internet_service_fqdns",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List Internet Service FQDN definitions.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_internet_service_groups": ToolMetadata(
        name="list_internet_service_groups",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="List internet service groups.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_internet_services": ToolMetadata(
        name="list_internet_services",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="List internet service name objects.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ip_pools": ToolMetadata(
        name="list_ip_pools",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all IP pools in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ips_protocols": ToolMetadata(
        name="list_ips_protocols",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List IPS protocol decoders.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ips_sensors": ToolMetadata(
        name="list_ips_sensors",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List IPS sensors in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ips_signatures": ToolMetadata(
        name="list_ips_signatures",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List available IPS signatures.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'severity': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "list_ipsec_concentrators": ToolMetadata(
        name="list_ipsec_concentrators",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List IPsec VPN concentrator configurations.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipsec_forticlient_templates": ToolMetadata(
        name="list_ipsec_forticlient_templates",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List FortiClient IPsec VPN templates.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipsec_manualkey_interfaces": ToolMetadata(
        name="list_ipsec_manualkey_interfaces",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List IPsec manual-key interfaces.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipsec_phase1_interfaces": ToolMetadata(
        name="list_ipsec_phase1_interfaces",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all IPsec Phase1 interfaces in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipsec_phase2_interfaces": ToolMetadata(
        name="list_ipsec_phase2_interfaces",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all IPsec Phase2 interfaces in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipsec_templates": ToolMetadata(
        name="list_ipsec_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all IPsec tunnel templates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipv6_firewall_address_groups": ToolMetadata(
        name="list_ipv6_firewall_address_groups",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List IPv6 address groups.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ipv6_firewall_addresses": ToolMetadata(
        name="list_ipv6_firewall_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List IPv6 firewall addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_model_devices": ToolMetadata(
        name="list_model_devices",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="List model devices.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "list_multicast_addresses": ToolMetadata(
        name="list_multicast_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List multicast addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_objects_by_metadata": ToolMetadata(
        name="list_objects_by_metadata",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List objects filtered by metadata.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'metadata_key': {'type': 'string', 'required': True}, 'metadata_value': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_onetime_schedules": ToolMetadata(
        name="list_onetime_schedules",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all one-time schedules in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_policy_blocks": ToolMetadata(
        name="list_policy_blocks",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List all policy blocks in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_policy_packages": ToolMetadata(
        name="list_policy_packages",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List all policy packages in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_proxy_addresses": ToolMetadata(
        name="list_proxy_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List proxy addresses for explicit web proxy policies.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_recent_tasks": ToolMetadata(
        name="list_recent_tasks",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List recent FortiManager tasks.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '10'}},
        requires_adom=False,
    ),
    "list_recurring_schedules": ToolMetadata(
        name="list_recurring_schedules",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all recurring schedules in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_replacement_message_groups": ToolMetadata(
        name="list_replacement_message_groups",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List replacement message groups for custom user notifications.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_running_tasks": ToolMetadata(
        name="list_running_tasks",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="List currently running (in-progress) tasks.",
        parameters={'limit': {'type': 'integer', 'optional': True, 'default': '50'}},
        requires_adom=False,
    ),
    "list_scheduled_installs": ToolMetadata(
        name="list_scheduled_installs",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="List all scheduled policy package installations.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sdwan_health_checks": ToolMetadata(
        name="list_sdwan_health_checks",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List SD-WAN health check monitors.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sdwan_members": ToolMetadata(
        name="list_sdwan_members",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List SD-WAN member interfaces.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sdwan_services": ToolMetadata(
        name="list_sdwan_services",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List SD-WAN service rules.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sdwan_templates": ToolMetadata(
        name="list_sdwan_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all SD-WAN templates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sdwan_zones": ToolMetadata(
        name="list_sdwan_zones",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List SD-WAN zones in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_security_profile_groups": ToolMetadata(
        name="list_security_profile_groups",
        module="fortimanager_mcp.tools.additional_object_tools",
        category="additional_objects",
        description="List security profile groups.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_service_categories": ToolMetadata(
        name="list_service_categories",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List service categories.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_ssh_filter_profiles": ToolMetadata(
        name="list_ssh_filter_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List SSH filter profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sslvpn_host_check_software": ToolMetadata(
        name="list_sslvpn_host_check_software",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all SSL-VPN host check software configurations in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_sslvpn_portals": ToolMetadata(
        name="list_sslvpn_portals",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all SSL-VPN portals in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_static_route_templates": ToolMetadata(
        name="list_static_route_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all static route templates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_system_administrators": ToolMetadata(
        name="list_system_administrators",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List all system administrators.",
        parameters={},
        requires_adom=False,
    ),
    "list_system_certificates": ToolMetadata(
        name="list_system_certificates",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List all system certificates.",
        parameters={},
        requires_adom=False,
    ),
    "list_system_interfaces": ToolMetadata(
        name="list_system_interfaces",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List all system interfaces on FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "list_system_templates": ToolMetadata(
        name="list_system_templates",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="List all system templates (device profiles) in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_tacacs_plus_servers": ToolMetadata(
        name="list_tacacs_plus_servers",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="List TACACS+ servers configured on FortiManager.",
        parameters={},
        requires_adom=False,
    ),
    "list_traffic_classes": ToolMetadata(
        name="list_traffic_classes",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List traffic classes for SD-WAN application-based routing.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_traffic_shaping_profiles": ToolMetadata(
        name="list_traffic_shaping_profiles",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List traffic shaping profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_url_filters": ToolMetadata(
        name="list_url_filters",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List URL filter objects.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_vip_groups": ToolMetadata(
        name="list_vip_groups",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all VIP groups in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_virtual_ips": ToolMetadata(
        name="list_virtual_ips",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all virtual IPs (VIPs) in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_virtual_wire_pairs": ToolMetadata(
        name="list_virtual_wire_pairs",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List virtual wire pair configurations for transparent deployments.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_voip_profiles": ToolMetadata(
        name="list_voip_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List VoIP (Voice over IP) security profiles.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_vpn_ca_certificates": ToolMetadata(
        name="list_vpn_ca_certificates",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all VPN Certificate Authorities in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_vpn_remote_certificates": ToolMetadata(
        name="list_vpn_remote_certificates",
        module="fortimanager_mcp.tools.vpn_tools",
        category="vpn",
        description="List all VPN remote certificates in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_wan_profiles": ToolMetadata(
        name="list_wan_profiles",
        module="fortimanager_mcp.tools.sdwan_tools",
        category="sdwan",
        description="List WAN profiles (SD-WAN templates).",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_webfilter_profiles": ToolMetadata(
        name="list_webfilter_profiles",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="List web filter profiles in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_wildcard_fqdn_addresses": ToolMetadata(
        name="list_wildcard_fqdn_addresses",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="List wildcard FQDN addresses.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "list_wildcard_fqdns": ToolMetadata(
        name="list_wildcard_fqdns",
        module="fortimanager_mcp.tools.advanced_object_tools",
        category="advanced_objects",
        description="List all wildcard FQDNs in an ADOM.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "lock_adom_workspace": ToolMetadata(
        name="lock_adom_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Lock an ADOM workspace for safe editing.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "lock_device_workspace": ToolMetadata(
        name="lock_device_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Lock a device for editing configuration.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "lock_policy_package_workspace": ToolMetadata(
        name="lock_policy_package_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Lock a policy package for editing.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "move_device_to_adom": ToolMetadata(
        name="move_device_to_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Move a device from one ADOM to another.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'target_adom': {'type': 'string', 'required': True}, 'source_adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "move_firewall_policy": ToolMetadata(
        name="move_firewall_policy",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Move/reorder a firewall policy relative to another policy.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'target_policy_id': {'type': 'integer', 'required': True}, 'package': {'type': 'string', 'required': True}, 'position': {'type': 'string', 'optional': True, 'default': 'after'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "move_policy_package_to_folder": ToolMetadata(
        name="move_policy_package_to_folder",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Move a policy package into a folder.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'folder_path': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "move_policy_to_section": ToolMetadata(
        name="move_policy_to_section",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Move a policy to a different section.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package_name': {'type': 'string', 'required': True}, 'section_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "move_vdom_to_adom": ToolMetadata(
        name="move_vdom_to_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Move a VDOM from one ADOM to another.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'required': True}, 'target_adom': {'type': 'string', 'required': True}, 'source_adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "preview_partial_install": ToolMetadata(
        name="preview_partial_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Preview partial policy installation (specific policies only).",
        parameters={'package_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'policy_ids': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "preview_policy_install_multiple": ToolMetadata(
        name="preview_policy_install_multiple",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Preview policy package installation for multiple devices.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'devices': {'type': 'object', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "preview_policy_install_single": ToolMetadata(
        name="preview_policy_install_single",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Preview policy package installation for a single device (dry run).",
        parameters={'package_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "query_fortiguard_outbreak": ToolMetadata(
        name="query_fortiguard_outbreak",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Query FortiGuard outbreak and threat intelligence.",
        parameters={'query_type': {'type': 'string', 'optional': True, 'default': 'latest'}},
        requires_adom=False,
    ),
    "query_ips_applications": ToolMetadata(
        name="query_ips_applications",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Query IPS application signatures.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'search_term': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "reboot_system": ToolMetadata(
        name="reboot_system",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Reboot FortiManager system.",
        parameters={'delay': {'type': 'integer', 'optional': True, 'default': '0'}},
        requires_adom=False,
    ),
    "refresh_device": ToolMetadata(
        name="refresh_device",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Refresh device configuration from the managed FortiGate.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "refresh_external_threat_feed": ToolMetadata(
        name="refresh_external_threat_feed",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Manually refresh an external threat feed.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "refresh_fortiap_status": ToolMetadata(
        name="refresh_fortiap_status",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Refresh FortiAP status for a managed device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "remove_device_from_group": ToolMetadata(
        name="remove_device_from_group",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Remove a device from a device group.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'group_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "remove_interface_from_zone": ToolMetadata(
        name="remove_interface_from_zone",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Remove an interface from a system zone.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'zone_name': {'type': 'string', 'required': True}, 'interface': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "remove_template_from_group": ToolMetadata(
        name="remove_template_from_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Remove a CLI template from a template group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'template_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "rename_device": ToolMetadata(
        name="rename_device",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Rename a managed device.",
        parameters={'current_name': {'type': 'string', 'required': True}, 'new_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "rename_fortiap": ToolMetadata(
        name="rename_fortiap",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Rename a managed FortiAP.",
        parameters={'current_wtp_id': {'type': 'string', 'required': True}, 'new_wtp_id': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "replace_security_profile_entries": ToolMetadata(
        name="replace_security_profile_entries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Replace ALL entries in a security profile with new ones.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'profile_name': {'type': 'string', 'required': True}, 'entries_json': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "restore_system_config": ToolMetadata(
        name="restore_system_config",
        module="fortimanager_mcp.tools.system_tools",
        category="system",
        description="Restore FortiManager configuration from backup file.",
        parameters={'backup_file': {'type': 'string', 'required': True}},
        requires_adom=False,
    ),
    "retrieve_device_config": ToolMetadata(
        name="retrieve_device_config",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Retrieve latest configuration from the device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "revert_adom_revision": ToolMetadata(
        name="revert_adom_revision",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Revert ADOM to a specific revision.",
        parameters={'adom': {'type': 'string', 'required': True}, 'revision_id': {'type': 'integer', 'required': True}},
        requires_adom=True,
    ),
    "revert_adom_to_revision": ToolMetadata(
        name="revert_adom_to_revision",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Revert an ADOM to a previous revision.",
        parameters={'revision_version': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "revert_device_revision": ToolMetadata(
        name="revert_device_revision",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Revert device to a specific configuration revision.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'revision_id': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "revert_policy_package": ToolMetadata(
        name="revert_policy_package",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Revert policy package to a previous version.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'revision_number': {'type': 'integer', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "rollback_device_install": ToolMetadata(
        name="rollback_device_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Rollback a device to previous installation state.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'revision': {'type': 'integer', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "run_device_cli_commands": ToolMetadata(
        name="run_device_cli_commands",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Run CLI commands against a managed device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'commands': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "schedule_cli_script": ToolMetadata(
        name="schedule_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Schedule a CLI script for future execution.",
        parameters={'script': {'type': 'string', 'required': True}, 'schedule_time': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'package': {'type': 'string', 'optional': True, 'default': None}, 'device': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "schedule_package_install": ToolMetadata(
        name="schedule_package_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Schedule a policy package installation for future time.",
        parameters={'package': {'type': 'string', 'required': True}, 'devices': {'type': 'array', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'schedule_time': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "schedule_policy_install": ToolMetadata(
        name="schedule_policy_install",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Schedule a policy package installation for a future time.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'schedule_time': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "set_device_meta_fields": ToolMetadata(
        name="set_device_meta_fields",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Set device meta fields.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'meta_fields': {'type': 'object', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "set_device_rma_status": ToolMetadata(
        name="set_device_rma_status",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Set RMA status on a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'rma_status': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "set_object_metadata": ToolMetadata(
        name="set_object_metadata",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Set metadata for a firewall object.",
        parameters={'object_type': {'type': 'string', 'required': True}, 'object_name': {'type': 'string', 'required': True}, 'metadata_key': {'type': 'string', 'required': True}, 'metadata_value': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "set_policy_label": ToolMetadata(
        name="set_policy_label",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Set a global label on a policy for categorization.",
        parameters={'policy_id': {'type': 'integer', 'required': True}, 'package_name': {'type': 'string', 'required': True}, 'label': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "set_vdom_meta_fields": ToolMetadata(
        name="set_vdom_meta_fields",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Set VDOM meta fields.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'vdom_name': {'type': 'string', 'required': True}, 'meta_fields': {'type': 'object', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "test_fortiguard_connection": ToolMetadata(
        name="test_fortiguard_connection",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Test connectivity to FortiGuard servers.",
        parameters={},
        requires_adom=False,
    ),
    "trigger_fortiguard_update": ToolMetadata(
        name="trigger_fortiguard_update",
        module="fortimanager_mcp.tools.fortiguard_tools",
        category="fortiguard",
        description="Trigger manual FortiGuard update.",
        parameters={'update_type': {'type': 'string', 'optional': True, 'default': 'all'}},
        requires_adom=False,
    ),
    "unassign_certificate_template": ToolMetadata(
        name="unassign_certificate_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign a certificate template from a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_cli_template": ToolMetadata(
        name="unassign_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign a device from a CLI template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_cli_template_group": ToolMetadata(
        name="unassign_cli_template_group",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign a device from a CLI template group.",
        parameters={'group_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_ipsec_template": ToolMetadata(
        name="unassign_ipsec_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign an IPsec tunnel template from a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_sdwan_template": ToolMetadata(
        name="unassign_sdwan_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign an SD-WAN template from a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_static_route_template": ToolMetadata(
        name="unassign_static_route_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign a static route template from a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unassign_system_template": ToolMetadata(
        name="unassign_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Unassign a device from a system template.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unlock_adom_workspace": ToolMetadata(
        name="unlock_adom_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Unlock an ADOM workspace.",
        parameters={'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unlock_device_workspace": ToolMetadata(
        name="unlock_device_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Unlock a device.",
        parameters={'device': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "unlock_policy_package_workspace": ToolMetadata(
        name="unlock_policy_package_workspace",
        module="fortimanager_mcp.tools.workspace_tools",
        category="workspace",
        description="Unlock a policy package.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "update_cli_script": ToolMetadata(
        name="update_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Update an existing CLI script.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'content': {'type': 'string', 'optional': True, 'default': None}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "update_cli_template": ToolMetadata(
        name="update_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Update an existing CLI template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'script': {'type': 'string', 'optional': True, 'default': None}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "update_cluster_serial_numbers": ToolMetadata(
        name="update_cluster_serial_numbers",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Update/replace serial numbers of HA cluster members.",
        parameters={'cluster_name': {'type': 'string', 'required': True}, 'primary_sn': {'type': 'string', 'required': True}, 'secondary_sn': {'type': 'string', 'optional': True, 'default': None}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "update_firewall_address": ToolMetadata(
        name="update_firewall_address",
        module="fortimanager_mcp.tools.object_tools",
        category="objects",
        description="Update an existing firewall address object.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'comment': {'type': 'string', 'optional': True, 'default': None}, 'kwargs': {'type': 'string', 'required': True}},
        requires_adom=True,
    ),
    "update_fortiap_config": ToolMetadata(
        name="update_fortiap_config",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Update FortiAP configuration.",
        parameters={'wtp_id': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'config_data': {'type': 'object', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "update_fortiswitch_port": ToolMetadata(
        name="update_fortiswitch_port",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Update FortiSwitch port configuration.",
        parameters={'switch_id': {'type': 'string', 'required': True}, 'port_name': {'type': 'string', 'required': True}, 'port_config': {'type': 'object', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "update_system_template": ToolMetadata(
        name="update_system_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Update an existing system template.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'description': {'type': 'string', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "upgrade_adom": ToolMetadata(
        name="upgrade_adom",
        module="fortimanager_mcp.tools.adom_tools",
        category="adom",
        description="Upgrade ADOM to a different FortiOS version.",
        parameters={'adom': {'type': 'string', 'required': True}, 'target_version': {'type': 'string', 'required': True}, 'target_mr': {'type': 'integer', 'optional': True, 'default': '0'}},
        requires_adom=True,
    ),
    "upgrade_device_firmware": ToolMetadata(
        name="upgrade_device_firmware",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Upgrade a device to a specific firmware version.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'image': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "upload_device_certificate": ToolMetadata(
        name="upload_device_certificate",
        module="fortimanager_mcp.tools.device_tools",
        category="devices",
        description="Upload a certificate to a device.",
        parameters={'device_name': {'type': 'string', 'required': True}, 'cert_name': {'type': 'string', 'required': True}, 'cert_content': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=False,
    ),
    "validate_cli_script": ToolMetadata(
        name="validate_cli_script",
        module="fortimanager_mcp.tools.script_tools",
        category="scripts",
        description="Validate CLI script syntax before execution.",
        parameters={'name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "validate_cli_template": ToolMetadata(
        name="validate_cli_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Validate a CLI template against a device.",
        parameters={'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "validate_policy_package": ToolMetadata(
        name="validate_policy_package",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Validate policy package before installation to check for errors.",
        parameters={'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}, 'devices': {'type': 'array', 'optional': True, 'default': None}},
        requires_adom=True,
    ),
    "validate_policy_package_errors": ToolMetadata(
        name="validate_policy_package_errors",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Validate policy package configuration for errors.",
        parameters={'package_name': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "validate_provisioning_template": ToolMetadata(
        name="validate_provisioning_template",
        module="fortimanager_mcp.tools.provisioning_tools",
        category="provisioning",
        description="Validate a provisioning template before deployment.",
        parameters={'template_type': {'type': 'string', 'required': True}, 'template_name': {'type': 'string', 'required': True}, 'device_name': {'type': 'string', 'required': True}, 'vdom': {'type': 'string', 'optional': True, 'default': 'root'}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "validate_security_profile_entries": ToolMetadata(
        name="validate_security_profile_entries",
        module="fortimanager_mcp.tools.security_tools",
        category="security",
        description="Validate security profile entries before applying them.",
        parameters={'profile_type': {'type': 'string', 'required': True}, 'entries_json': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "verify_package_installation": ToolMetadata(
        name="verify_package_installation",
        module="fortimanager_mcp.tools.policy_tools",
        category="policies",
        description="Verify that a package was successfully installed on a device.",
        parameters={'device': {'type': 'string', 'required': True}, 'package': {'type': 'string', 'required': True}, 'adom': {'type': 'string', 'optional': True, 'default': 'root'}},
        requires_adom=True,
    ),
    "wait_for_task_completion": ToolMetadata(
        name="wait_for_task_completion",
        module="fortimanager_mcp.tools.monitoring_tools",
        category="monitoring",
        description="Wait for a task to complete and return final status.",
        parameters={'task_id': {'type': 'integer', 'required': True}, 'timeout': {'type': 'integer', 'optional': True, 'default': '300'}},
        requires_adom=False,
    ),
}


def get_tool_categories() -> dict[str, dict[str, Any]]:
    """Get all tool categories with counts and descriptions.

    Returns:
        Dictionary of categories with metadata
    """
    categories = {
        "devices": {
            "name": "Device Management",
            "description": "Device lifecycle, firmware, HA clusters, VDOMs, configuration",
            "tool_count": 69,
            "module": "device_tools",
        },
        "objects": {
            "name": "Firewall Objects",
            "description": "Addresses, services, zones, VIPs, IP pools, schedules",
            "tool_count": 47,
            "module": "object_tools",
        },
        "policies": {
            "name": "Policy Management",
            "description": "Policy packages, firewall rules, NAT policies, installation",
            "tool_count": 64,
            "module": "policy_tools",
        },
        "monitoring": {
            "name": "Monitoring & Tasks",
            "description": "System status, device connectivity, task tracking, statistics",
            "tool_count": 43,
            "module": "monitoring_tools",
        },
        "security": {
            "name": "Security Profiles",
            "description": "Web filter, IPS, antivirus, application control, DLP",
            "tool_count": 33,
            "module": "security_tools",
        },
        "provisioning": {
            "name": "Provisioning & Templates",
            "description": "CLI templates, system templates, device profiles",
            "tool_count": 98,
            "module": "provisioning_tools",
        },
        "system": {
            "name": "System Operations",
            "description": "Administration, backup, restore, certificates, users",
            "tool_count": 47,
            "module": "system_tools",
        },
        "adom": {
            "name": "ADOM Management",
            "description": "Administrative domains, workspace locking, revisions",
            "tool_count": 28,
            "module": "adom_tools",
        },
        "vpn": {
            "name": "VPN Management",
            "description": "IPsec tunnels, SSL-VPN, certificates, monitoring",
            "tool_count": 24,
            "module": "vpn_tools",
        },
        "sdwan": {
            "name": "SD-WAN",
            "description": "SD-WAN zones, health checks, services, templates",
            "tool_count": 19,
            "module": "sdwan_tools",
        },
        "scripts": {
            "name": "CLI Scripts",
            "description": "Script management, execution, scheduling",
            "tool_count": 12,
            "module": "script_tools",
        },
        "fortiguard": {
            "name": "FortiGuard",
            "description": "Updates, contracts, threat feeds, packages",
            "tool_count": 23,
            "module": "fortiguard_tools",
        },
        "workspace": {
            "name": "Workspace & Locking",
            "description": "ADOM locking, commits, lock status",
            "tool_count": 12,
            "module": "workspace_tools",
        },
        "advanced_objects": {
            "name": "Advanced Objects",
            "description": "Dynamic objects, threat feeds, SDN connectors",
            "tool_count": 18,
            "module": "advanced_object_tools",
        },
        "additional_objects": {
            "name": "Additional Objects",
            "description": "Schedules, internet services, geography, multicast",
            "tool_count": 16,
            "module": "additional_object_tools",
        },
    }
    return categories


def search_tools(
    query: str | None = None,
    category: str | None = None,
    limit: int = 20,
) -> list[ToolMetadata]:
    """Search for tools matching criteria.

    Args:
        query: Search term to match in name or description
        category: Filter by category
        limit: Maximum results to return

    Returns:
        List of matching tool metadata
    """
    results: list[ToolMetadata] = []

    for tool in TOOL_REGISTRY.values():
        # Filter by category
        if category and tool.category != category:
            continue

        # Filter by query
        if query:
            query_lower = query.lower()
            if query_lower not in tool.name.lower() and query_lower not in tool.description.lower():
                continue

        results.append(tool)

        if len(results) >= limit:
            break

    return results


def get_tool_metadata(tool_name: str) -> ToolMetadata | None:
    """Get metadata for a specific tool.

    Args:
        tool_name: Name of the tool

    Returns:
        Tool metadata or None if not found
    """
    return TOOL_REGISTRY.get(tool_name)


async def execute_tool_dynamic(tool_name: str, **kwargs: Any) -> Any:
    """Dynamically import and execute a tool.

    This allows tools to be executed without loading them all into memory.

    Args:
        tool_name: Name of the tool to execute
        **kwargs: Arguments to pass to the tool

    Returns:
        Tool execution result

    Raises:
        ValueError: If tool not found
        RuntimeError: If tool execution fails
    """
    # Get tool metadata
    metadata = get_tool_metadata(tool_name)
    if not metadata:
        raise ValueError(f"Tool '{tool_name}' not found in registry")

    try:
        # Import the corresponding API module instead of the tool module
        # Map tool modules to API modules
        api_module_map = {
            "device_tools": "devices",
            "adom_tools": "adoms",
            "policy_tools": "policies",
            "object_tools": "objects",
            "monitoring_tools": "monitoring",
            "security_tools": "security",
            "provisioning_tools": "provisioning",
            "system_tools": "system",
            "vpn_tools": "vpn",
            "sdwan_tools": "sdwan",
            "script_tools": "scripts",
            "fortiguard_tools": "fortiguard",
            "workspace_tools": "workspace",
            "advanced_object_tools": "advanced_objects",
            "additional_object_tools": "additional_objects",
            "proxy_tools": None,  # Special case - these are not API-based
        }

        api_module_name = api_module_map.get(metadata.module)
        if not api_module_name:
            # Fallback to direct tool execution for proxy tools
            module = importlib.import_module(metadata.module)
            tool_func = getattr(module, tool_name, None)
            if not tool_func:
                raise RuntimeError(f"Tool function '{tool_name}' not found in module {metadata.module}")
            if inspect.iscoroutinefunction(tool_func):
                result = await tool_func(**kwargs)
            else:
                result = tool_func(**kwargs)
            return result

        # Import the API module
        api_module = importlib.import_module(f"fortimanager_mcp.api.{api_module_name}")

        # Get the API class (assumes class name follows pattern)
        api_class_name = f"{api_module_name.title()}API"
        api_class = getattr(api_module, api_class_name, None)
        if not api_class:
            raise RuntimeError(f"API class '{api_class_name}' not found in module {api_module_name}")

        # Initialize the API with client
        from fortimanager_mcp.api.client import get_fmg_client
        client = get_fmg_client()
        if not client:
            raise RuntimeError("FortiManager client not initialized")

        api_instance = api_class(client)

        # Get the API method (remove 'list_', 'get_', 'create_' prefixes to match API method names)
        api_method_name = tool_name
        if tool_name.startswith(('list_', 'get_', 'create_', 'update_', 'delete_')):
            # API methods typically don't have these prefixes
            api_method_name = tool_name

        api_method = getattr(api_instance, api_method_name, None)
        if not api_method:
            raise RuntimeError(f"API method '{api_method_name}' not found in {api_class_name}")

        # Execute the API method
        if inspect.iscoroutinefunction(api_method):
            result = await api_method(**kwargs)
        else:
            result = api_method(**kwargs)

        return result

    except Exception as e:
        logger.error(f"Error executing tool '{tool_name}': {e}")
        raise RuntimeError(f"Failed to execute tool '{tool_name}': {e}") from e


def populate_registry() -> None:
    """Populate registry with all tools from all modules.

    This is called at startup in dynamic mode to build the complete registry.
    Currently uses a static registry. Future enhancement: auto-generate from modules.
    """
    logger.info("Tool registry initialized")
    logger.info(f"Registry contains metadata for {len(TOOL_REGISTRY)} tools")
    logger.info("Note: Static registry in use. Run 'generate_registry.py' to update from source.")

